<?xml version="1.0" ?>

<container xmlns="http://www.symfony-project.org/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.symfony-project.org/schema/dic/services http://www.symfony-project.org/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="profiler.class">Symfony\Component\HttpKernel\Profiler\Profiler</parameter>
        <parameter key="profiler.storage.sqlite.class">Symfony\Component\HttpKernel\Profiler\SqliteProfilerStorage</parameter>
        <parameter key="profiler.storage.pdo.class">Symfony\Component\HttpKernel\Profiler\PdoProfilerStorage</parameter>
        <parameter key="profiler.storage.file">%kernel.cache_dir%/profiler.db</parameter>
        <parameter key="profiler.storage.lifetime">86400</parameter>
        <parameter key="profiler_listener.class">Symfony\Bundle\FrameworkBundle\Profiler\ProfilerListener</parameter>
        <parameter key="profiler_listener.only_exceptions">false</parameter>
    </parameters>

    <services>
        <service id="profiler" class="%profiler.class%" scope="request">
            <argument type="service" id="profiler.storage" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>

        <service id="profiler.storage.sqlite" class="%profiler.storage.sqlite.class%" public="false">
            <argument>%profiler.storage.file%</argument>
            <argument>%profiler.storage.lifetime%</argument>
        </service>

        <service id="profiler.storage.pdo" class="%profiler.storage.pdo.class%" public="false">
            <argument type="service" id="pdo_connection" />
            <argument>%profiler.storage.lifetime%</argument>
        </service>

        <service id="profiler_listener" class="%profiler_listener.class%">
            <tag name="kernel.listener" event="core.response" method="handleResponse" />
            <tag name="kernel.listener" event="core.exception" method="handleException" />
            <argument type="service" id="service_container" />
            <argument type="service" id="profiler.request_matcher" on-invalid="null" />
            <argument>%profiler_listener.only_exceptions%</argument>
        </service>

        <service id="profiler.storage" alias="profiler.storage.sqlite" public="false" />
    </services>
</container>
